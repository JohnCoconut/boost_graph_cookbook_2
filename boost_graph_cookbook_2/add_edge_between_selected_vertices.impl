#include <cassert>
#include <sstream>
#include <stdexcept>
#include <string>
#include <boost/graph/adjacency_list.hpp>
#include "get_vertices_with_selectedness.h"
#include "count_vertices_with_selectedness.h"

template <typename graph>
typename boost::graph_traits<graph>::edge_descriptor
add_edge_between_selected_vertices(graph& g)
{
  if (count_vertices_with_selectedness(true, g) != 2)
  {
    std::stringstream msg;
    msg << __func__ << ": "
      << "need exactly two selected vertices, "
      << "to add an edge in between, instead of "
      << count_vertices_with_selectedness(true, g)
    ;
    throw std::invalid_argument(msg.str());
  }
  const auto vds = get_vertices_with_selectedness(true, g);
  assert(vds.size() == 2);
  const auto aer = boost::add_edge(vds[0], vds[1], g);
  if (!aer.second) {
    std::stringstream msg;
    msg << __func__ << ": edge insertion failed";
    throw std::invalid_argument(msg.str());
  }
  return aer.first;
}
