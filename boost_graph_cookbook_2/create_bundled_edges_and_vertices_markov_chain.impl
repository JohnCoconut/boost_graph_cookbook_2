#include <cassert>
#include "create_empty_directed_bundled_edges_and_vertices_graph.h"
#include "add_bundled_edge.h"
#include "add_bundled_vertex.h"

boost::adjacency_list<
  boost::vecS,
  boost::vecS,
  boost::directedS,
  my_bundled_vertex,
  my_bundled_edge
>
create_bundled_edges_and_vertices_markov_chain()
{
  auto g
    = create_empty_directed_bundled_edges_and_vertices_graph();
  const auto va = my_bundled_vertex("Stable","Right",1.0,2.0);
  const auto vb = my_bundled_vertex("Not unstable","Not left",3.0,4.0);
  const auto vd_a = add_bundled_vertex(va, g);
  const auto vd_b = add_bundled_vertex(vb, g);
  const auto e_aa = my_bundled_edge("Red","Heat",1.0,2.0);
  const auto e_ab = my_bundled_edge("Orange","Lose heat",3.0,4.0);
  const auto e_ba = my_bundled_edge("Yellow cold","Heat",5.0,6.0);
  const auto e_bb = my_bundled_edge("Green cold","Stay cool",7.0,8.0);
  add_bundled_edge(vd_a, vd_a, e_aa, g);
  add_bundled_edge(vd_a, vd_b, e_ab,  g);
  add_bundled_edge(vd_b, vd_a, e_ba,  g);
  add_bundled_edge(vd_b, vd_b, e_bb,  g);
  return g;
}
